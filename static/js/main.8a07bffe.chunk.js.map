{"version":3,"sources":["components/FilterTab/FilterHeader.js","components/FilterTab/FilterDiv.js","components/FilterTab/FilterTab.js","components/SearchBody/SearchItem.js","components/SearchBody/MainBody.js","App.js","serviceWorker.js","index.js"],"names":["FilterHeader","className","FilterDiv","props","status","data","heading","useState","activeButton","setActiveButton","type","filterSearch","e","preventDefault","target","value","getAPIData","toLowerCase","map","index","key","onClick","style","backgroundColor","FilterTab","year","setYear","launch","setLaunch","land","setLand","useEffect","axios","get","then","res","updateSearchData","device","SearchItem","result","console","log","src","links","mission_patch_small","mission_name","flight_number","mission_id","length","id","launch_year","String","launch_success","rocket","first_stage","cores","land_success","MainBody","results","setResults","App","setData","showData","setShowData","showError","setShowError","isDesktopOrLaptop","useMediaQuery","query","isTablet","maxDeviceWidth","minDeviceWidth","isMobileDevice","response","catch","error","val","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8a07bffe.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction FilterHeader() {\r\n    return (\r\n        <div className=\"filter-header\">\r\n            Filters\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterHeader;\r\n","import Axios from \"axios\";\r\nimport React, {useState } from \"react\";\r\n\r\nfunction FilterDiv(props) {\r\n  const years = [\r\n    2006,\r\n    2007,\r\n    2008,\r\n    2009,\r\n    2010,\r\n    2011,\r\n    2012,\r\n    2013,\r\n    2014,\r\n    2015,\r\n    2016,\r\n    2017,\r\n    2018,\r\n    2019,\r\n    2020,\r\n  ];\r\n  const status = [\"True\", \"False\"];\r\n  let data = [];\r\n  let heading = \"\";\r\n\r\n  const [activeButton, setActiveButton] = useState(\"\");\r\n\r\n  if (props.type == \"year\") {\r\n    data = years;\r\n    heading = \"Launch Year\";\r\n  } else if (props.type == \"launch\") {\r\n    data = status;\r\n    heading = \"Successful Launch\";\r\n  } else {\r\n    data = status;\r\n    heading = \"Successful Landing\";\r\n  }\r\n\r\n  const filterSearch = (e) => {\r\n    e.preventDefault();\r\n    if (props.type == \"year\") {\r\n        setActiveButton(e.target.value);\r\n        props.getAPIData(props.type,e.target.value);\r\n      } else if (props.type == \"launch\") {\r\n        setActiveButton(e.target.value);\r\n        props.getAPIData(props.type,e.target.value.toLowerCase());\r\n      } else {\r\n        setActiveButton(e.target.value);\r\n        props.getAPIData(props.type,e.target.value.toLowerCase());\r\n      }\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"filter-div\">\r\n      <div>{heading}</div>\r\n      <hr />\r\n      {data.map((value, index) => (\r\n        <button\r\n          className=\"filter-button\"\r\n          key={index}\r\n          onClick={filterSearch}\r\n          value={value}\r\n          style={{backgroundColor: activeButton == value && \"#82f108fc\"}}\r\n        >\r\n          {value}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterDiv;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport FilterHeader from \"./FilterHeader\";\r\nimport FilterDiv from \"./FilterDiv\";\r\nimport axios from \"axios\";\r\n\r\nfunction FilterTab(props) {\r\n  const [year, setYear] = useState(0);\r\n  const [launch, setLaunch] = useState(\"\");\r\n  const [land, setLand] = useState(\"\");\r\n\r\n  const getAPIData = (type, value) => {\r\n      if (type == \"year\") {\r\n      setYear(value);\r\n    } else if (type == \"launch\") {\r\n      setLaunch(value);\r\n    } else {\r\n      setLand(value);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (year != 0||land!=\"\"||launch!=\"\") {\r\n      axios\r\n        .get(\r\n          `https://api.spacexdata.com/v3/launches?limit=100&launch_success=${launch}&land_success=${land}&launch_year=${year}`\r\n        )\r\n        .then((res) => props.updateSearchData(res.data));\r\n    }\r\n  }, [year, launch, land]);\r\n\r\n  return (\r\n    <div className={props.device===\"isDesktopOrLaptop\"?\"filter-tab-desktop\":\"filter-tab\"}>\r\n      <FilterHeader />\r\n      <FilterDiv type=\"year\" getAPIData={getAPIData} />\r\n      <FilterDiv type=\"launch\" getAPIData={getAPIData} />\r\n      <FilterDiv type=\"landing\" getAPIData={getAPIData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterTab;\r\n","import React from \"react\";\r\n\r\nfunction SearchItem(props) {\r\n  const data = props.result;\r\n  console.log(data);\r\n  return (\r\n    <div className={props.device===\"isDesktopOrLaptop\" ?\"item-card-desktop\": \"item-card\"}>\r\n      <div className=\"img-div\">\r\n        <img src={data.links.mission_patch_small} className=\"img-tag\" />\r\n      </div>\r\n      <div className=\"data-div\">\r\n        <span className=\"data-name\">\r\n          {data.mission_name} #{data.flight_number}\r\n        </span>\r\n        <span>\r\n          <b> Mission Ids: </b>\r\n          {data.mission_id.length>1&&\r\n          <ul>\r\n            {data.mission_id.map((id, index) => (\r\n              <li key={index}>{id}</li>\r\n            ))}\r\n          </ul>}\r\n        </span>\r\n        <span>\r\n          <b>Launch Year: </b> {data.launch_year}\r\n        </span>\r\n        <span>\r\n          <b>Successful Launch: </b> {String(data.launch_success)}\r\n        </span>\r\n        <span>\r\n          <b>Successful Landing : </b> {(data.rocket.first_stage.cores[0].land_success)==null? \"N/A\":String(data.rocket.first_stage.cores[0].land_success)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SearchItem from \"./SearchItem\";\r\n\r\nfunction MainBody(props) {\r\n  const [results, setResults] = useState(props.data);\r\n\r\n  useEffect(() => {\r\n    setResults(props.data);\r\n  }, [props.data]);\r\n\r\n  return (\r\n    <div className={props.device===\"isDesktopOrLaptop\"?\"main-body-desktop\":props.device === \"isTablet\" ? 'main-body-tablet':\"main-body\"}>\r\n      {results.map((result, index) => (\r\n        <SearchItem device={props.device} key={index} result={result} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainBody;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport FilterTab from \"./components/FilterTab/FilterTab\";\nimport axios from \"axios\";\nimport MainBody from \"./components/SearchBody/MainBody\";\nimport { useMediaQuery } from 'react-responsive'\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [showData, setShowData] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  const isDesktopOrLaptop = useMediaQuery({\n    query: '(min-device-width: 1024px)'\n  })\n\n  const isTablet = useMediaQuery({ maxDeviceWidth: '1024px', minDeviceWidth: '701px' })\n  const isMobileDevice = useMediaQuery({\n    query: '(max-device-width: 700px)'\n  })\n\n  useEffect(() => {\n    axios\n      .get(\"https://api.spacexdata.com/v3/launches?limit=100\")\n      .then((response) => {\n        setData(response.data);\n        setShowData(true);\n      })\n      .catch((error) => setShowError(true));\n  }, []);\n\n  const updateSearchData = (val) => {\n    setData(val);\n  };\n  return (\n\n    \n    <div className=\"body\">\n      {\n        isDesktopOrLaptop &&\n        <><div className=\"header-desktop\">SpaceX Launch Programs</div>\n      <div className=\"nav-search-desktop\">\n        <FilterTab device=\"isDesktopOrLaptop\" updateSearchData={updateSearchData} />\n        {showData ? (\n          showError ? (\n            <span>Something went wrong</span>\n          ) : data.length === 0 ? (\n            <span> No Record Found </span>\n          ) : (\n            <MainBody device=\"isDesktopOrLaptop\" data={data} />\n          )\n        ) : (\n          <span> Loading... </span>\n        )}\n      </div>\n      <div className=\"footer-desktop\">Developed by: Antara Mondal</div>\n      </>\n}\n{\n        isTablet &&\n        <><div className=\"header-desktop\">SpaceX Launch Programs</div>\n      <div className=\"nav-search-desktop\">\n        <FilterTab device=\"isDesktopOrLaptop\" updateSearchData={updateSearchData} />\n        {showData ? (\n          showError ? (\n            <span>Something went wrong</span>\n          ) : data.length === 0 ? (\n            <span> No Record Found </span>\n          ) : (\n            <MainBody device=\"isTablet\" data={data} />\n          )\n        ) : (\n          <span> Loading... </span>\n        )}\n      </div>\n      <div className=\"footer-desktop\">Developed by: Antara Mondal</div>\n      </>\n}\n{ isMobileDevice&&\n      <>\n      <div className=\"header\">SpaceX Launch Programs</div>\n      <div className=\"nav-search\">\n        <FilterTab device={\"isMobileDevice\"} updateSearchData={updateSearchData} />\n        {showData ? (\n          showError ? (\n            <span>Something went wrong</span>\n          ) : data.length === 0 ? (\n            <span> No Record Found </span>\n          ) : (\n            <MainBody data={data} />\n          )\n        ) : (\n          <span> Loading... </span>\n        )}\n      </div>\n      <div className=\"footer\">Developed by: Antara Mondal</div></>\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}